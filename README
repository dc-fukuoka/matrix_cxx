this is the same as f03_exercise, but with C++.
like the following can be performed.

    Matrix A(size), B(size), C(size);
    A.setMatrix(-1.0, 1.0, 5555);
    B.setMatrix(-2.0, 2.0, 7777);

    A.transpose();
    B.transpose();
    C = 0.0;

    std::cout << "A:\n";
    A.showMatrix();
    std::cout << "B:\n";
    B.showMatrix();
    C += A;
    C -= A;
    std::cout << "C: \n";
    C.showMatrix();
    C = A*B;
    std::cout << "C = A*B\n";
    C.showMatrix();

    C /= B;
    std::cout << "C /= B(= A)\n";
    C.showMatrix();
    if (C == A)
        std::cout << "C == A\n";
    if (A != B)
        std::cout << "A != B\n";

    Matrix Ainv = A.inverse();
    std::cout << "Ainv = A^-1\n";
    Ainv.showMatrix();


$ make
icpc -std=c++11 -Wall -g -O3 -mavx -fopenmp test.cxx -mkl
[fukuoka@selene71 cxx]$ ./a.out
A:
   6.71751e-01   -5.11412e-01    5.03268e-01   -5.15220e-01
  -1.42823e-01   -4.56335e-01    1.01004e-01   -7.82845e-01
  -7.78005e-01    9.79638e-01    7.61025e-01   -6.15416e-01
  -8.88567e-01   -5.99848e-01    3.96229e-01   -8.35100e-01
B:
   0.00000e+00   -1.32831e-01   -3.12948e-01    1.46513e+00
  -1.44351e+00    0.00000e+00    1.67454e-01   -1.87368e+00
   1.24615e-01   -1.73444e+00    0.00000e+00    1.59954e-03
  -7.00869e-01   -3.26451e-01    1.82880e+00    0.00000e+00
C:
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00
C = A*B
   1.16204e+00   -7.93924e-01   -1.23809e+00    1.94323e+00
   1.21998e+00    9.93457e-02   -1.46338e+00    6.45931e-01
  -8.87953e-01   -1.01571e+00   -7.17952e-01   -2.97419e+00
   1.50056e+00   -2.96589e-01   -1.34960e+00   -1.77311e-01
C /= B(= A)
   6.71751e-01   -5.11412e-01    5.03268e-01   -5.15220e-01
  -1.42823e-01   -4.56335e-01    1.01004e-01   -7.82845e-01
  -7.78005e-01    9.79638e-01    7.61025e-01   -6.15416e-01
  -8.88567e-01   -5.99848e-01    3.96229e-01   -8.35100e-01
C == A
maximum error is: 2.71408e+00
A != B
Ainv = A^-1
   6.71751e-01   -5.11412e-01    5.03268e-01   -5.15220e-01
  -1.42823e-01   -4.56335e-01    1.01004e-01   -7.82845e-01
  -7.78005e-01    9.79638e-01    7.61025e-01   -6.15416e-01
  -8.88567e-01   -5.99848e-01    3.96229e-01   -8.35100e-01
trivial test: C = C - C (=0)
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00
   0.00000e+00    0.00000e+00    0.00000e+00    0.00000e+00


performance comparison of C = A/B between Fortran 2003 vs C++:
matrix size 1024x1024
compiler: intel compiler 2018u0

-- Fortran 2003 --
[fukuoka@selene71 f03]$ OMP_NUM_THREADS=16 KMP_AFFINITY=compact ./a.out 1024
 size:        1024
 
-- C++ --
[fukuoka@selene71 cxx]$ OMP_NUM_THREADS=16 KMP_AFFINITY=compact ./a.out 1024
size: 1024
 time[s]: 9.08929
